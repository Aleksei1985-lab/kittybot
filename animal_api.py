import requests
import logging

logger = logging.getLogger(__name__)


class AnimalAPI:
    def __init__(self):
        self.cat_api_url = "https://api.thecatapi.com/v1/images/search"
        self.dog_api_url = "https://api.thedogapi.com/v1/images/search"
        self.timeout = 5
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω AnimalAPI")

    async def get_animal_image(self, prefer_cat=True):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ"""
        try:
            if prefer_cat:
                url, error = await self._get_image(self.cat_api_url, "–∫–æ—Ç–∏–∫–∞")
                if url:
                    logger.info("–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∏–∫–∞")
                    return url, "–ú—è—É! –í–æ—Ç —Ç–µ–±–µ –∫–æ—Ç–∏–∫! üòä"

            url, error = await self._get_image(self.dog_api_url, "—Å–æ–±–∞–∫–∏")
            if url:
                logger.info("–ü–æ–ª—É—á–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–±–∞–∫–∏ –≤–º–µ—Å—Ç–æ –∫–æ—Ç–∏–∫–∞")
                return url, "–ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –∫–æ—Ç–∏–∫–∞ üòø –ù–æ –≤–æ—Ç —Ç–µ–±–µ —Å–æ–±–∞—á–∫–∞! üê∂"

            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∏ –∫–æ—Ç–∏–∫–∞, –Ω–∏ —Å–æ–±–∞–∫–∏")
            return None, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∏ –∫–æ—Ç–∏–∫–∞, –Ω–∏ —Å–æ–±–∞—á–∫—É üòø –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ!"

        except Exception as e:
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ get_animal_image: {e}", exc_info=True)
            return None, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòø"

    async def _get_image(self, api_url, animal_type):
        """–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        try:
            logger.debug(f"–ó–∞–ø—Ä–æ—Å –∫ {api_url} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {animal_type}")
            response = requests.get(api_url, timeout=self.timeout)
            response.raise_for_status()
            data = response.json()
            logger.debug(f"–£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API –¥–ª—è {animal_type}")
            return data[0]["url"], None
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ {animal_type}: {str(e)}")
            return None, e
